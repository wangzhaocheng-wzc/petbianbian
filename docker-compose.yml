version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pet-health-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:5000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - pet-health-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pet-health-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/pet-health
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
      - AI_SERVICE_URL=${AI_SERVICE_URL:-}
      - AI_SERVICE_KEY=${AI_SERVICE_KEY:-}
      - POSTGRES_URL=${POSTGRES_URL:-postgresql://postgres:postgres@postgres:5432/pet_health}
      - DB_PRIMARY=${DB_PRIMARY:-postgres}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - mongo
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - pet-health-network

  # MongoDB database
  mongo:
    image: mongo:6.0
    container_name: pet-health-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=pet-health
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - pet-health-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: pet-health-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - pet-health-network

  # Postgres database
  postgres:
    image: postgres:16-alpine
    container_name: pet-health-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pet_health
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pet-health-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: pet-health-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./backend/uploads:/var/www/uploads:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - pet-health-network

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  pet-health-network:
    driver: bridge