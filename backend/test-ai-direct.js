const fs = require('fs');
const path = require('path');

// 创建测试图片
function createTestImage() {
  const jpegData = Buffer.from([
    0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
    0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
    0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09,
    0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12,
    0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20,
    0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29,
    0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32,
    0x3C, 0x2E, 0x33, 0x34, 0x32, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x01,
    0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01,
    0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xC4,
    0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xDA, 0x00, 0x0C,
    0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0x8A, 0x00,
    0xFF, 0xD9
  ]);
  
  const testImagePath = path.join(__dirname, 'test-poop-direct.jpg');
  fs.writeFileSync(testImagePath, jpegData);
  return testImagePath;
}

async function testAIServiceDirect() {
  console.log('🧪 直接测试AI服务...\n');
  
  try {
    // 导入AI服务
    const { AIService } = require('./dist/services/aiService');
    
    // 创建测试图片
    const testImagePath = createTestImage();
    console.log('✓ 测试图片创建成功:', testImagePath);
    
    // 1. 测试图片预处理
    console.log('\n1. 测试图片预处理...');
    const processedImage = await AIService.preprocessImage(testImagePath);
    console.log('✓ 图片预处理成功');
    console.log(`  - 大小: ${processedImage.size} bytes`);
    console.log(`  - 尺寸: ${processedImage.width}x${processedImage.height}`);
    console.log(`  - 格式: ${processedImage.format}`);
    
    // 2. 测试内容验证
    console.log('\n2. 测试内容验证...');
    const isValid = await AIService.validatePoopContent(processedImage);
    console.log(`✓ 内容验证结果: ${isValid ? '有效' : '无效'}`);
    
    // 3. 测试AI分析
    console.log('\n3. 测试AI分析...');
    const analysisResult = await AIService.analyzePoopImage(processedImage);
    console.log('✓ AI分析成功');
    console.log(`  - 形状: ${analysisResult.shape}`);
    console.log(`  - 健康状态: ${analysisResult.healthStatus}`);
    console.log(`  - 置信度: ${analysisResult.confidence}%`);
    console.log(`  - 详情: ${analysisResult.details}`);
    
    // 4. 测试结果验证
    console.log('\n4. 测试结果验证...');
    const isValidResult = AIService.validateAnalysisResult(analysisResult);
    console.log(`✓ 结果验证: ${isValidResult ? '通过' : '失败'}`);
    
    // 清理
    fs.unlinkSync(testImagePath);
    console.log('\n✓ 测试图片清理完成');
    
    console.log('\n🎉 AI服务直接测试全部通过！');
    
  } catch (error) {
    console.error('❌ AI服务测试失败:', error.message);
    console.error('详细错误:', error);
  }
}

testAIServiceDirect().catch(console.error);